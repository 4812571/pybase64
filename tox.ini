[tox]
envlist = {py27,py36}-coverage,flake8,isort

[testenv]
setenv =
    CFLAGS=-O0 -coverage
    LDFLAGS=-coverage
commands =
    py27-coverage: python -m coverage erase
    python -m coverage run -a --branch --source=pybase64 setup.py clean_ext build_ext -v -i -f
    python -m coverage run -a --branch --source=pybase64 -m nose
    python -m coverage run -a --branch --source=pybase64 -m pybase64 benchmark pybase64/_pybase64.c
    python -m coverage run -a --branch --source=pybase64 -m pybase64 --license
    bash -c "echo 'hello world !/?' | python -m coverage run -a --branch --source=pybase64 -m pybase64 encode - | grep -e '^aGVsbG8gd29ybGQgIS8/Cg==$'"
    bash -c "echo 'hello world !/?' | python -m coverage run -a --branch --source=pybase64 -m pybase64 encode -u - | grep -e '^aGVsbG8gd29ybGQgIS8_Cg==$'"
    bash -c "echo 'hello world !/?' | python -m coverage run -a --branch --source=pybase64 -m pybase64 encode -a ':,' - | grep -e '^aGVsbG8gd29ybGQgIS8,Cg==$'"
    bash -c "echo -n 'aGVsbG8gd29ybGQgIS8/Cg==' | python -m coverage run -a --branch --source=pybase64 -m pybase64 decode - | grep -e '^hello world !/?$'"
    bash -c "echo -n 'aGVsbG8gd29ybGQgIS8_Cg==' | python -m coverage run -a --branch --source=pybase64 -m pybase64 decode -u - | grep -e '^hello world !/?$'"
    bash -c "echo -n 'aGVsbG8gd29ybGQgIS8,Cg==' | python -m coverage run -a --branch --source=pybase64 -m pybase64 decode -a ':,' - | grep -e '^hello world !/?$'"
    bash -c "echo 'aGVsbG8gd29yb GQgIS8/Cg==' | python -m coverage run -a --branch --source=pybase64  -m pybase64 decode --no-validation - | grep -e '^hello world !/?$'"
    python -m coverage run -a --branch --source=pybase64 -m pybase64 encode -o /dev/null /dev/null
    python setup.py clean_ext
    python -m coverage run -a --branch --source=pybase64 -m nose
    python -m coverage run -a --branch --source=pybase64 -m pybase64 benchmark pybase64/_pybase64.c
#    py36-coverage: python -m coverage html
    py36-coverage: python -m coverage report --show-missing --fail-under=100
#    py36-coverage: gcovr -r . -s -e base64 --html --html-details -o htmlcov/_pybase64.html #waiting for fail under option
    py36-coverage: gcovr -r . -s -e base64 #waiting for fail under option
deps =
    coverage
    future
    gcovr
    nose
whitelist_externals =
    bash

[testenv:flake8]
commands = flake8 pybase64
deps =
    flake8

[testenv:isort]
commands = isort --check-only --recursive pybase64
deps =
    isort
