notifications:
  email: false

env:
  global:
    - CIBW_TEST_REQUIRES="nose future"
    - CIBW_TEST_COMMAND="nosetests -v pybase64"
    - TWINE_USERNAME=mayeut

matrix:
  include:
    - dist: trusty
      sudo: required
      services:
        - docker
      env: PYBASE64_BUILD_WHEEL=1
    - dist: trusty
      language: python
      python: "3.6"
    - dist: trusty
      language: python
      python: "3.6"
      env: PYBASE64_TOX=1
    - dist: trusty
      language: python
      python: "3.6"
      env: PYBASE64_VALGRIND=1
      addons:
        apt:
          packages:
            - valgrind
    - os: osx
      osx_image: xcode8.2
      env: PYBASE64_BUILD_WHEEL=1

install:
  - |
    if [ "${PYBASE64_BUILD_WHEEL:-}" != "" ]; then
      pip install cibuildwheel==0.4.1
      # Create file '.cibuildwheel' so that extension build is not optional (c.f. setup.py).
      touch .cibuildwheel
    elif [ "${PYBASE64_TOX:-}" != "" ]; then
      pip install -r requirements.txt codecov
    else
      pip install -r requirements.txt
    fi

script:
  - |
    if [ "${PYBASE64_BUILD_WHEEL:-}" != "" ]; then
      cibuildwheel --output-dir todeploy
    elif [ "${PYBASE64_TOX}" != "" ]; then
      python -m tox && codecov
    elif [ "${PYBASE64_VALGRIND}" != "" ]; then
      CFLAGS="-O0" python setup.py build_ext -fiv
      PYTHONMALLOC=malloc valgrind --leak-check=full --show-leak-kinds=definite --errors-for-leak-kinds=definite --error-exitcode=2 $(pyenv which python) -m unittest
    else
      ./travis/build-source-dist.sh
    fi
  - |
    if [ "${PYBASE64_TOX:-}${PYBASE64_VALGRIND:-}" == "" ]; then
      ls todeploy/
      if [ "${TRAVIS_TAG:-}" != "" ]; then
        python -m pip install twine
        python -m twine upload --skip-existing todeploy/*
      fi
    fi
